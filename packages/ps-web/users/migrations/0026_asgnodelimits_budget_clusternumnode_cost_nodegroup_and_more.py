# Generated by Django 4.2.4 on 2023-08-31 19:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0025_remove_cluster_org_num_node_req_pending'),
    ]

    operations = [
        migrations.CreateModel(
            name='ASGNodeLimits',
            fields=[
                ('object_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('min', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('max', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('object_id', models.UUIDField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('max_allowance', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('monthly_allowance', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('fytd_accrued_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('most_recent_charge_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('most_recent_credit_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('most_recent_recon_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('max_hrly', models.FloatField(default=1e-07)),
                ('cur_hrly', models.FloatField(default=1e-07)),
                ('min_hrly', models.FloatField(default=1e-07)),
                ('fc_min_hourly', models.JSONField(default=dict)),
                ('fc_min_daily', models.JSONField(default=dict)),
                ('fc_min_monthly', models.JSONField(default=dict)),
                ('fc_cur_hourly', models.JSONField(default=dict)),
                ('fc_cur_daily', models.JSONField(default=dict)),
                ('fc_cur_monthly', models.JSONField(default=dict)),
                ('fc_max_hourly', models.JSONField(default=dict)),
                ('fc_max_daily', models.JSONField(default=dict)),
                ('fc_max_monthly', models.JSONField(default=dict)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterNumNode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('desired_num_nodes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('has_active_ps_cmd', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('object_id', models.UUIDField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('tm', models.DateTimeField(default=django.utils.timezone.now)),
                ('cnt', models.IntegerField(default=0)),
                ('avg', models.FloatField(default=0.0)),
                ('min', models.FloatField(default=0.0)),
                ('max', models.FloatField(default=0.0)),
                ('std', models.FloatField(default=0.0)),
                ('ccr', models.JSONField(default=dict)),
                ('cost_refresh_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('gran', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fk_gran', to='users.granchoice')),
            ],
        ),
        migrations.CreateModel(
            name='NodeGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='compute', max_length=200)),
                ('node_mgr_fixed_cost', models.FloatField(default=0.145, help_text='https://aws.amazon.com/ec2/pricing/on-demand/ for monitor and ilb')),
                ('node_fixed_cost', models.FloatField(default=0.2016, help_text='https://aws.amazon.com/ec2/pricing/on-demand/ for node')),
                ('mgr_ip_address', models.GenericIPAddressField(default='0.0.0.0')),
                ('active_ps_cmd', models.CharField(blank=True, default='', max_length=32)),
                ('is_deployed', models.BooleanField(default=False)),
                ('deployed_state', models.CharField(default='unknown', max_length=64)),
                ('cnnro_ids', models.JSONField(blank=True, null=True)),
                ('cur_version', models.CharField(blank=True, max_length=16, null=True)),
                ('expire_time', models.DateTimeField(blank=True, null=True)),
                ('provision_env_ready', models.BooleanField(default=False)),
                ('prov_env_version', models.CharField(blank=True, max_length=16, null=True)),
                ('prov_env_is_public', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('min_ddt', models.DateTimeField(default=django.utils.timezone.now)),
                ('cur_ddt', models.DateTimeField(default=django.utils.timezone.now)),
                ('max_ddt', models.DateTimeField(default=django.utils.timezone.now)),
                ('version', models.CharField(default='latest', max_length=16)),
                ('admin_max_node_cap', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('time_to_live_in_mins', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(15)])),
                ('allow_deploy_by_token', models.BooleanField(default=True)),
                ('destroy_when_no_nodes', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('pcqr_display_age_in_hours', models.IntegerField(default=72)),
                ('pcqr_retention_age_in_days', models.IntegerField(default=14)),
                ('loop_count', models.BigIntegerField(default=0)),
                ('num_owner_ps_cmd', models.BigIntegerField(default=0)),
                ('num_ps_cmd', models.BigIntegerField(default=0)),
                ('num_ps_cmd_successful', models.BigIntegerField(default=0)),
                ('num_onn', models.BigIntegerField(default=0)),
                ('provisioning_suspended', models.BooleanField(default=False)),
                ('num_setup_cmd', models.BigIntegerField(default=0)),
                ('num_setup_cmd_successful', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.RemoveField(
            model_name='orgcost',
            name='gran',
        ),
        migrations.RemoveField(
            model_name='orgcost',
            name='org',
        ),
        migrations.RemoveField(
            model_name='orgnumnode',
            name='org',
        ),
        migrations.RemoveField(
            model_name='orgnumnode',
            name='user',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='admin_max_node_cap',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='allow_deploy_by_token',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='balance',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='cur_ddt',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='cur_hrly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='desired_num_nodes',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='destroy_when_no_nodes',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_cur_daily',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_cur_hourly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_cur_monthly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_max_daily',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_max_hourly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_max_monthly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_min_daily',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_min_hourly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fc_min_monthly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='fytd_accrued_cost',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='is_public',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='loop_count',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='max_allowance',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='max_ddt',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='max_hrly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='max_node_cap',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='min_ddt',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='min_hrly',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='min_node_cap',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='monthly_allowance',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='most_recent_charge_time',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='most_recent_credit_time',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='most_recent_recon_time',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='node_fixed_cost',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='node_mgr_fixed_cost',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_onn',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_owner_ps_cmd',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_ps_cmd',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_ps_cmd_successful',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_setup_cmd',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='num_setup_cmd_successful',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='pcqr_display_age_in_hours',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='pcqr_retention_age_in_days',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='provisioning_suspended',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='time_to_live_in_mins',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='tokens',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='tokens_time',
        ),
        migrations.RemoveField(
            model_name='orgaccount',
            name='version',
        ),
        migrations.RemoveField(
            model_name='ownerpscmd',
            name='org',
        ),
        migrations.RemoveField(
            model_name='pscmdresult',
            name='org',
        ),
        migrations.DeleteModel(
            name='Cluster',
        ),
        migrations.DeleteModel(
            name='OrgCost',
        ),
        migrations.DeleteModel(
            name='OrgNumNode',
        ),
        migrations.AddField(
            model_name='nodegroup',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.orgaccount'),
        ),
        migrations.AddField(
            model_name='clusternumnode',
            name='cluster',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_cluster_cnn', to='users.nodegroup'),
        ),
        migrations.AddField(
            model_name='clusternumnode',
            name='user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_user_cnn', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ownerpscmd',
            name='cluster',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_cluster_opscmd', to='users.nodegroup'),
        ),
        migrations.AddField(
            model_name='pscmdresult',
            name='cluster',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_cluster_cr', to='users.nodegroup'),
        ),
    ]
