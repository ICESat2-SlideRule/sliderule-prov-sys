import logging
import sys
import shutil
import os

def create_mock_aws_provider_file(file_path):
    text = '''
    #
    #
    # This file was created by test_misc/replace_terraform_aws_provider.py
    #
    # DO NOT EDIT THIS FILE!
    #
    provider "aws" {
        access_key                  = "test"
        secret_key                  = "test"
        region                      = "us-west-2"
        skip_credentials_validation = true
        skip_metadata_api_check     = true
        skip_requesting_account_id  = true
        s3_use_path_style           = true

        endpoints {
            s3              = "http://localhost:4566"
            sts             = "http://localhost:4566"
            secretsmanager  = "http://localhost:4566"
            route53         = "http://localhost:4566"
            ec2             = "http://localhost:4566"


        }
    }
    resource "aws_s3_bucket" "test_bucket" {
        bucket = "sliderule"
    }
    '''
    # Open the file in write mode and write the text
    with open(file_path, "w") as file:
        file.write(text)

    logger.info(f"File '{file_path}' created.")

def replace_files(logger,search_directory, old_file_name, replacement_file_path):
    cnt = 0
    for root, dirs, files in os.walk(search_directory):
        for file in files:
            if file == old_file_name:
                file_path = os.path.join(root, file)
                shutil.copyfile(replacement_file_path, file_path)
                cnt += 1
                logger.info(f"Replaced: {file_path} with {replacement_file_path}")
    logger.info(f"Replaced {cnt} files with {replacement_file_path}")
    return cnt

if __name__ == "__main__":
    # Assume we pass in the search directory as the first argument
    #
    #  old filename is providers.tf
    #  replacement file path is ./mock_aws_provider.tf
    search_directory        = sys.argv[1]
    old_file_name           = "providers.tf"
    replacement_file_path   = "./mock_aws_provider.tf"

    # Setting up logger
    logger = logging.getLogger("replace_files")
    logger.setLevel(logging.INFO)

    # create the mock aws provider file
    create_mock_aws_provider_file(replacement_file_path)

    # replace the provider file in all subdirectories with this file
    replace_files(logger, search_directory, old_file_name, replacement_file_path)
